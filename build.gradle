plugins {
    id 'java'
    id 'idea'
//    id 'scala'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

group = 'io.izzel'
version = '5.7.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://ptms.ink:8082/repository/maven-releases/" }
    maven { url "http://repo.ptms.ink/repository/maven-releases/" }
    mavenCentral()
}

dependencies {
    implementation('org.apache.cassandra:cassandra-all:0.8.1') {
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'log4j')
    }

    implementation 'me.skymc.taboolib:TabooLib:4.9:all'
    implementation 'io.izzel.taboolib:TabooLibKotlin:1.0.78:all'
    implementation 'io.izzel.taboolib:TabooLibDeprecated:1.0.4'

//    implementation 'ink.ptms:blockdb:1.0.10'
//    implementation 'ink.ptms:navigation:1.0.7'

    implementation 'ink.ptms:nms-all:1.0.0'
    implementation 'ink.ptms.core:v11200:11200:all'

    implementation 'net.md_5.bungee:BungeeCord:1:all'

//    implementation 'cn.maxmc.menubuilderlib:MenuBuilderLib:2.0.3'
    implementation 'com.github.cryptomorin:XSeries:7.9.1'
    implementation 'org.apache.commons:commons-lang3:3.8'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.ow2.asm:asm:9.0'
    implementation 'org.ow2.asm:asm-commons:9.0'
    implementation 'com.google.inject:guice:4.2.2'
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'com.mongodb:MongoDB:3.12.2:all'

    implementation 'pw.yumc.Yum:Yum:1:all'
    implementation 'net.milkbowl.vault:Vault:1:all'
    implementation 'us.myles.ViaVersion:ViaVersion:1:all'
    implementation 'protocolsupport:ProtocolSupport:1:all'
    implementation 'com.sk89q.worldedit:WorldEdit:7:all'
    implementation 'com.sk89q.worldguard:WorldGuard:7:all'
    implementation 'public:PlaceholderAPI:2.10.9'

    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'org.scala-lang:scala-library:2.12.8'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
}

shadowJar {
    classifier('all')
    from(sourceSets.main.allSource) {
        exclude '__resources__/*'
        exclude 'plugin.yml'
    }
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand('version': project.version)
    }
    dependencies {
        it.include it.dependency('io.izzel.taboolib:.*')
        it.include it.dependency('ink.ptms:blockdb:.*')
        it.include it.dependency('ink.ptms:navigation:.*')
        it.include it.dependency('com.github.cryptomorin:.*')
        it.include it.dependency('com.google.code.gson:.*')
        it.include it.dependency('org.apache.commons:.*')
        it.include it.dependency('org.ow2.asm:.*')
        it.include it.dependency('cn.maxmc.menubuilderlib:.*')
    }
    relocate 'ink.ptms.blockdb', 'io.izzel.taboolib.kotlin.blockdb'
    relocate 'ink.ptms.navigation', 'io.izzel.taboolib.kotlin.navigation'
//    relocate 'cn.maxmc.menubuilderlib', 'io.izzel.taboolib.internal.menubuilder'
    relocate 'org.apache.commons.lang3', 'io.izzel.taboolib.internal.apache.lang3'
    relocate 'com.cryptomorin.xseries', 'io.izzel.taboolib.internal.xseries'
    relocate 'org.objectweb.asm', 'io.izzel.taboolib.internal.asm'
    relocate 'com.google.gson', 'io.izzel.taboolib.internal.gson'
}

//compileScala {
//    options.encoding = scalaCompileOptions.encoding = 'UTF-8'
//    scalaCompileOptions.forkOptions.jvmArgs.addAll(['-Djna.nosys=true'])
//}

artifacts {
    archives shadowJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.findProperty('repository')) {
                authentication(userName: project.findProperty('user'), password: project.findProperty('password'))
            }
            pom.artifactId = rootProject.name
            pom.groupId = 'io.izzel.taboolib'
            pom.version = project.version
            pom.packaging = 'jar'
        }
    }
}
